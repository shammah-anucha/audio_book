"""initial

Revision ID: 102f6814cf50
Revises: 
Create Date: 2022-09-26 01:30:15.201699

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '102f6814cf50'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_events_date', table_name='events')
    op.drop_index('ix_events_description', table_name='events')
    op.drop_index('ix_events_event_id', table_name='events')
    op.drop_index('ix_events_host', table_name='events')
    op.drop_index('ix_events_location', table_name='events')
    op.drop_index('ix_events_name', table_name='events')
    op.drop_index('ix_events_time', table_name='events')
    op.drop_table('events')
    op.drop_index('ix_userdepartment_userdept_id', table_name='userdepartment')
    op.drop_table('userdepartment')
    op.drop_index('ix_departments_dept_id', table_name='departments')
    op.drop_index('ix_departments_deptname', table_name='departments')
    op.drop_table('departments')
    op.drop_index('ix_users_D_O_B', table_name='users')
    op.drop_index('ix_users_Firstname', table_name='users')
    op.drop_index('ix_users_Lastname', table_name='users')
    op.drop_index('ix_users_country_of_residence', table_name='users')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_phone', table_name='users')
    op.drop_index('ix_users_user_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_rosters_roster_id', table_name='rosters')
    op.drop_table('rosters')
    op.drop_index('ix_unavailabilities_aval_id', table_name='unavailabilities')
    op.drop_index('ix_unavailabilities_end_date', table_name='unavailabilities')
    op.drop_index('ix_unavailabilities_start_date', table_name='unavailabilities')
    op.drop_table('unavailabilities')
    op.drop_index('ix_notification_notification_id', table_name='notification')
    op.drop_table('notification')
    op.drop_index('ix_messages_msg_id', table_name='messages')
    op.drop_table('messages')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('messages',
    sa.Column('msg_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='messages_user_id_fkey'),
    sa.PrimaryKeyConstraint('msg_id', name='messages_pkey')
    )
    op.create_index('ix_messages_msg_id', 'messages', ['msg_id'], unique=False)
    op.create_table('notification',
    sa.Column('notification_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('to_user', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('from_user', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['from_user'], ['users.user_id'], name='notification_from_user_fkey'),
    sa.ForeignKeyConstraint(['to_user'], ['users.user_id'], name='notification_to_user_fkey'),
    sa.PrimaryKeyConstraint('notification_id', name='notification_pkey')
    )
    op.create_index('ix_notification_notification_id', 'notification', ['notification_id'], unique=False)
    op.create_table('unavailabilities',
    sa.Column('aval_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='unavailabilities_user_id_fkey'),
    sa.PrimaryKeyConstraint('aval_id', name='unavailabilities_pkey')
    )
    op.create_index('ix_unavailabilities_start_date', 'unavailabilities', ['start_date'], unique=False)
    op.create_index('ix_unavailabilities_end_date', 'unavailabilities', ['end_date'], unique=False)
    op.create_index('ix_unavailabilities_aval_id', 'unavailabilities', ['aval_id'], unique=False)
    op.create_table('rosters',
    sa.Column('roster_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Firstname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Lastname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.event_id'], name='rosters_event_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='rosters_user_id_fkey'),
    sa.PrimaryKeyConstraint('roster_id', name='rosters_pkey')
    )
    op.create_index('ix_rosters_roster_id', 'rosters', ['roster_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.INTEGER(), server_default=sa.text("nextval('users_user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Firstname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Lastname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('D_O_B', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('country_of_residence', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('disabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=False)
    op.create_index('ix_users_user_id', 'users', ['user_id'], unique=False)
    op.create_index('ix_users_phone', 'users', ['phone'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_index('ix_users_country_of_residence', 'users', ['country_of_residence'], unique=False)
    op.create_index('ix_users_Lastname', 'users', ['Lastname'], unique=False)
    op.create_index('ix_users_Firstname', 'users', ['Firstname'], unique=False)
    op.create_index('ix_users_D_O_B', 'users', ['D_O_B'], unique=False)
    op.create_table('departments',
    sa.Column('dept_id', sa.INTEGER(), server_default=sa.text("nextval('departments_dept_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('deptname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('dept_id', name='departments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_departments_deptname', 'departments', ['deptname'], unique=False)
    op.create_index('ix_departments_dept_id', 'departments', ['dept_id'], unique=False)
    op.create_table('userdepartment',
    sa.Column('userdept_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dept_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dept_id'], ['departments.dept_id'], name='userdepartment_dept_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='userdepartment_user_id_fkey'),
    sa.PrimaryKeyConstraint('userdept_id', name='userdepartment_pkey')
    )
    op.create_index('ix_userdepartment_userdept_id', 'userdepartment', ['userdept_id'], unique=False)
    op.create_table('events',
    sa.Column('event_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('host', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('event_id', name='events_pkey')
    )
    op.create_index('ix_events_time', 'events', ['time'], unique=False)
    op.create_index('ix_events_name', 'events', ['name'], unique=False)
    op.create_index('ix_events_location', 'events', ['location'], unique=False)
    op.create_index('ix_events_host', 'events', ['host'], unique=False)
    op.create_index('ix_events_event_id', 'events', ['event_id'], unique=False)
    op.create_index('ix_events_description', 'events', ['description'], unique=False)
    op.create_index('ix_events_date', 'events', ['date'], unique=False)
    # ### end Alembic commands ###
